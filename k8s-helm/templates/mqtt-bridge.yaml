---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: '{{ .Release.Name }}'
  name: '{{ .Release.Name }}-mqtt-bridge'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqtt-bridge
  template:
    metadata:
      labels:
        app: mqtt-bridge
    spec:
      imagePullSecrets:
        - name: ecr-creds
      containers:
      - name: mqtt-bridge
        image: {{ .Values.images.mqttBridge | quote }}
        imagePullPolicy: IfNotPresent
        env:
        # --- Configuration from values.yaml ---
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ .Values.kafka.kafkaBootStrapServers | quote }}
        - name: KAFKA_INPUT_TOPIC
          value: {{ .Values.env.KAFKA_INPUT_TOPIC | quote }}
        - name: MQTT_USE_TLS
          value: {{ .Values.env.MQTT_USE_TLS | quote }}
        - name: MQTT_SHARE_GROUP_NAME
          value: {{ .Values.env.MQTT_SHARE_GROUP_NAME | quote }}
        # --- External Secrets (explicitly declared for clarity) ---
        - name: MQTT_BROKER_HOST
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MQTT_BROKER_HOST
        - name: MQTT_BROKER_PORT
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MQTT_BROKER_PORT
        - name: MQTT_TOPIC_FILTER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MQTT_TOPIC_FILTER
      initContainers:
      # Wait for Kafka broker to be ready
      - name: wait-for-kafka
        image: busybox:latest
        env:
          - name: KAFKA_BOOTSTRAP_SERVERS
            value: {{ .Values.kafka.kafkaBootStrapServers | quote }}
        command:
          - sh
          - -c
          - |
            # Extract host and port from KAFKA_BOOTSTRAP_SERVERS
            KAFKA_HOST=$(echo $KAFKA_BOOTSTRAP_SERVERS | awk -F':' '{print $1}')
            KAFKA_PORT=$(echo $KAFKA_BOOTSTRAP_SERVERS | awk -F':' '{print $2}')
            until nc -z "$KAFKA_HOST" "$KAFKA_PORT"; do
              echo "Waiting for Kafka broker $KAFKA_HOST:$KAFKA_PORT..."
              sleep 2
            done
      - name: wait-for-mqtt
        command:
        - sh
        - -c
        - "until nc -z \"$MQTT_BROKER_HOST\" \"$MQTT_BROKER_PORT\"; do\n  echo \"\
          Waiting for $MQTT_BROKER_HOST:$MQTT_BROKER_PORT\u2026\"\n  sleep 2\ndone\n"
        env:
        - name: MQTT_BROKER_HOST
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MQTT_BROKER_HOST
        - name: MQTT_BROKER_PORT
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MQTT_BROKER_PORT
        image: busybox:latest
